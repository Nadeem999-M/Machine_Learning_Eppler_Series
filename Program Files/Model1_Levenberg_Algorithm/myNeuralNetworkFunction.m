function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 13-Jun-2025 00:10:02.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 4xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 40xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-25;-1.5288;0;-0.00297];
x1_step1.gain = [0.04;0.526898150587491;4.17092448541219;4.19216902825522];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.58810585887257171844;3.5872488429970239565];
IW1_1 = [0.3627471666459248234 -0.7775167749432458919 -0.25972386874622044317 0.39912721089439240352;-2.1917705974162946525 -0.13937176663589179171 2.0949354137447300239 1.3042439923845610128];

% Layer 2
b2 = [0.39693020875503282063;0.63431907504227980077;0.72676442742978153433;0.77552972583766199843;0.78237186275135495173;0.76266837793873332174;0.75111521474821085764;0.77610457481757688658;0.92028911086063125424;-0.52303865816008399126;0.098537675060140383909;0.17941965186609160066;0.10232777359860537048;0.000166694373434497084;-0.059824068295777792226;-0.097772105009219165139;-0.13072489865289729782;-0.13301003435909147798;-0.98978336157053337097;1.002769893313417704;1.1931584311395173614;1.1265980064805283245;0.9430046726340572949;0.73560712758987722992;0.57600096795904143221;0.53684594198081581062;0.63057333367883250386;0.6563842559463161086;0.4530602149344335472;0.47982311651431464039;0.53954848815488887226;0.64419038265295491819;0.74728715153046287867;0.85218803930656761292;1.0084923033562485095;1.1991502610022648501;1.2573060247922946964;1.0158494451387878321];
LW2_1 = [-1.9064868578866744908 0.49934857652287717444;-1.8933182728982036469 0.4990391561296658729;-1.6896681476556176804 0.44656005264175069325;-1.4438254519763513706 0.38443113388110167206;-1.1423948635506924187 0.30994346543806433614;-0.82973920661305755608 0.23288269026656646665;-0.63728443846036286757 0.18641726594258933858;-0.69475346850229591222 0.20368205500594888102;-1.4875723988256763786 0.40125583733816888587;2.1461391476990576699 -0.46704227442947143789;1.0396503410955717506 -0.21307622802224093772;0.95049783356176253957 -0.19634268904815313506;1.1049021903155198387 -0.2328113320191237956;1.3010550907882361127 -0.27868628778422993575;1.42670100710520531 -0.30926929396398866734;1.429175608065997638 -0.31078988450929317944;1.1980918214591400606 -0.25330454047655220906;0.66858157618337488159 -0.11885843579569257966;0.43013512013794874544 -0.10498064998844096329;-3.3491396231580456977 0.83505972103734515954;-3.7441028817337729251 0.9263299036359509131;-3.5484724366288165065 0.86522977819625657148;-3.0131709922969314164 0.72169763352907201348;-2.4980068090981619733 0.58640097931397516806;-2.112030331237240155 0.48401187368558784563;-1.9147655632386073599 0.42539043271190091211;-1.9050526842843085173 0.40933767634791723422;-2.159197617117663448 0.47025648654862350906;-1.5023716710363423932 0.39913625477357200788;-1.3315395696291403294 0.35857339138571991954;-1.4194533823966577479 0.38021930129765113549;-1.610869236110217706 0.43008115876506985975;-1.8876161405491806988 0.50319044710211513483;-2.208516536209492731 0.58816032292503717116;-2.5971177390780546546 0.6903501196631685044;-3.0033378334941405186 0.79472515854028480398;-3.1199993786492590253 0.8167243576697897911;-0.34875336817326524352 0.084340283870801543986];

% Output 1
y1_step2.ymin = -1;
y1_step2.gain = [112.100099668903;78.7968803154573;62.7661202260001;53.6167177040277;46.485458783608;39.075822224944;33.2052754433601;32.4393835381963;50.3028601600627;51.4736231978213;36.8490405774978;38.1167019652476;47.4464307075683;61.844565829206;80.2285542067674;106.040463018386;148.911337888699;256.734345915975;233.644859813084;39.7896140278337;28.0719515603352;21.5639630322478;16.5492341661686;13.4843587417947;12.1775742586953;13.1067217188485;17.9821030991031;33.1292880697939;27.1041606502174;10.2088893677381;7.46843344503918;7.09985157354306;7.80886505105007;9.29794155570912;12.0637742033614;17.3035820148923;29.0314103700987;240.673886883273];
y1_step2.xoffset = [0.888249762599612;0.776453023069828;0.664479367004253;0.552226117770945;0.438920511242059;0.323194446517753;0.206955867279187;0.0990355586321461;0.0172536190024248;0.00951121685405787;0.0992893455935072;0.206956126945388;0.32319471696264;0.43892077482672;0.552226377785287;0.664479625638626;0.776453281153835;0.888249762599612;-0.00056;0.00192021193723648;0.0118042252232397;0.0216954781927487;0.0260711210483686;0.0285173215542465;0.029869304962042;0.029513118764475;0.0264782421414574;0.0174299306219984;-0.0553148208888315;-0.137111655589021;-0.182106653129127;-0.194105628145867;-0.1768372544317;-0.146922560370088;-0.11320429166322;-0.0785631799134107;-0.0434552911770598;-0.008];
y1_step1.xrows = 40;
y1_step1.keep = [2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40];
y1_step1.remove = [1 20];
y1_step1.constants = [1;1];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    temp = mapminmax_reverse(a2,y1_step2);
    Y{1,ts} = removeconstantrows_reverse(temp,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end

% Remove Constants Output Reverse-Processing Function
function x = removeconstantrows_reverse(y,settings)
  Q = size(y,2);
  x = nan(settings.xrows,Q,'like',y);
  x(settings.keep,:) = y;
  x(settings.remove,:) = repmat(settings.constants,1,Q);
end
